{
  "name": "atlas-12288-phase0",
  "version": "0.1.0",
  "private": true,
  "type": "commonjs",
  "scripts": {
    "build": "tsc -p core/config/tsconfig.json",
    "test": "vitest run",
    "test:ci": "vitest run --reporter=dot",
    "test:oracle": "vitest run core/tests/G0.hologram-oracle.spec.ts",
    "test:oracle:ml": "vitest run core/tests/G0.ml-enhanced-hologram-oracle.spec.ts",
    "test:oracle:master": "vitest run core/tests/G0.master-hologram-oracle.spec.ts",
    "validate": "ts-node core/src/validator/cli.ts",
    "validate:rh-fixtures": "ts-node tools/scripts/validate-rh-fixtures.ts",
    "oracle": "ts-node core/src/validator/master-oracle-cli.ts",
    "oracle:base": "ts-node core/src/validator/master-oracle-cli.ts --mode base",
    "oracle:enhanced": "ts-node core/src/validator/master-oracle-cli.ts --mode enhanced",
    "oracle:ml": "ts-node core/src/validator/master-oracle-cli.ts --mode ml-enhanced",
    "oracle:strict": "ts-node core/src/validator/master-oracle-cli.ts --mode strict",
    "oracle:dev": "ts-node core/src/validator/master-oracle-cli.ts --mode development",
    "oracle:middleware": "ts-node core/src/validator/master-oracle-cli.ts --mode middleware",
    "oracle:watch": "ts-node core/src/validator/master-oracle-cli.ts --watch",
    "oracle:verbose": "ts-node core/src/validator/master-oracle-cli.ts --verbose",
    "validate:oracle": "ts-node core/src/validator/master-oracle-cli.ts --mode enhanced",
    "validate:oracle:blueprint": "ts-node core/src/validator/master-oracle-cli.ts --mode enhanced --input data/modules/atlas-12288/blueprint/blueprint.json",
    "validate:oracle:all": "ts-node core/src/validator/master-oracle-cli.ts --mode enhanced --input data/modules/",
    "oracle:demo": "ts-node tools/scripts/demo-enhanced-oracle.ts",
    "pre-commit:oracle": "node tools/scripts/pre-commit-oracle.js",
    "test:oracle:strict": "vitest run core/tests/G0.strict-holographic-coherence-oracle.spec.ts",
    "stamp:blueprint": "ts-node tools/scripts/stamp-fingerprint.ts data/modules/atlas-12288/blueprint/blueprint.schema.json",
    "bench": "ts-node --transpile-only tools/scripts/bench.ts",
    "bench:ci": "node --expose-gc -e \"require('child_process').spawnSync('npm',['run','bench','--','--json','--out','build/artifacts/perf/attestation.json','--iters=120','--iters-transport=60','--warmup=80','--runs=5'],{stdio:'inherit',shell:true})\"",
    "bench:verify": "ts-node --transpile-only tools/scripts/verify-perf.ts --in=build/artifacts/perf/attestation.json",
    "bench:compare": "ts-node --transpile-only tools/scripts/compare-perf.ts --base=baseline/perf/main.json --new=build/artifacts/perf/attestation.json --max-regress=0.10 --max-p95-delta=0.25",
    "targets:stamp": "ts-node --transpile-only tools/scripts/targets-stamp.ts",
    "bench:compare:targets": "ts-node --transpile-only tools/scripts/bench-compare.ts --in=build/artifacts/perf/attestation.json --targets=atlas-12288/perf/targets.json",
    "bench:longrun": "node --expose-gc -r ts-node/register/transpile-only tools/scripts/bench-longrun.ts --windows=5 --runs=3 --warmup=30 --iters=100 --itersTransport=50 --max-drift=2.0",
    "sdk:ref": "ts-node --transpile-only sdk/ref/cli.ts",
    "sdk:smoke:node": "node sdk/smoke/run.cjs \"npx ts-node --transpile-only sdk/ref/cli.ts\"",
    "sdk:smoke:python": "node sdk/smoke/run.cjs \"python -m hologram_sdk --delegate\"",
    "sdk:smoke:go": "node sdk/smoke/run.cjs \"go run ./sdk/go/cmd/hologram\"",
    "sdk:smoke:rust": "node sdk/smoke/run.cjs \"cargo run --manifest-path sdk/rust/Cargo.toml\"",
    "sdk:smoke:c": "node sdk/smoke/run.cjs \"node sdk/c/hologram.cjs\"",
    "sdk:smoke:all": "npm run sdk:smoke:node && npm run sdk:smoke:python && npm run sdk:smoke:go && npm run sdk:smoke:rust && npm run sdk:smoke:c",
    "sdk:smoke:bench": "node -e \"const start=Date.now(); require('child_process').execSync('npm run sdk:smoke:all', {stdio:'inherit'}); console.log('Total time:', Date.now()-start, 'ms');\"",
    "perf:report": "ts-node --transpile-only tools/scripts/perf-report.ts",
    "proof:build": "ts-node --transpile-only tools/scripts/proof/build-proof.ts",
    "proof:verify": "ts-node --transpile-only tools/scripts/proof/verify-proof.ts",
    "fix:invariants": "ts-node --transpile-only tools/scripts/fix-invariants.ts",
    "automated-proof": "ts-node --transpile-only core/src/validator/automated-proof-cli.ts",
    "proof:generate": "ts-node --transpile-only core/src/validator/automated-proof-cli.ts generate",
    "proof:analyze": "ts-node --transpile-only core/src/validator/automated-proof-cli.ts analyze",
    "proof:compose": "ts-node --transpile-only core/src/validator/automated-proof-cli.ts compose",
    "proof:verify-generated": "ts-node --transpile-only core/src/validator/automated-proof-cli.ts verify",
    "proof:list": "ts-node --transpile-only core/src/validator/automated-proof-cli.ts list",
    "proof:validate-all": "ts-node --transpile-only core/src/validator/automated-proof-cli.ts validate-all",
    "demo:automated-proof": "ts-node --transpile-only tools/scripts/demo-automated-proof.ts",
    "proof-chain": "ts-node --transpile-only core/src/proof-chain/cli/ProofChainCLI.ts",
    "proof-chain:transform": "ts-node --transpile-only core/src/proof-chain/cli/ProofChainCLI.ts transform",
    "proof-chain:compute": "ts-node --transpile-only core/src/proof-chain/cli/ProofChainCLI.ts compute",
    "proof-chain:verify": "ts-node --transpile-only core/src/proof-chain/cli/ProofChainCLI.ts verify",
    "proof-chain:trace": "ts-node --transpile-only core/src/proof-chain/cli/ProofChainCLI.ts trace",
    "proof-chain:compliance": "ts-node --transpile-only core/src/proof-chain/cli/ProofChainCLI.ts compliance",
    "proof-chain:alerts": "ts-node --transpile-only core/src/proof-chain/cli/ProofChainCLI.ts alerts",
    "proof-chain:metrics": "ts-node --transpile-only core/src/proof-chain/cli/ProofChainCLI.ts metrics",
    "proof-chain:statistics": "ts-node --transpile-only core/src/proof-chain/cli/ProofChainCLI.ts statistics",
    "test:proof-chain": "vitest run core/src/proof-chain/tests/ProofChainTests.ts",
    "test:chess-client": "cd examples/chess-app/client && npm test",
    "test:chess-server": "cd examples/chess-app/server && npm test",
    "test:chess": "npm run test:chess-client && npm run test:chess-server",
    "ipfs:start": "powershell.exe -ExecutionPolicy Bypass -File scripts/ipfs-manager.ps1 start",
    "ipfs:stop": "powershell.exe -ExecutionPolicy Bypass -File scripts/ipfs-manager.ps1 stop",
    "ipfs:restart": "powershell.exe -ExecutionPolicy Bypass -File scripts/ipfs-manager.ps1 restart",
    "ipfs:status": "powershell.exe -ExecutionPolicy Bypass -File scripts/ipfs-manager.ps1 status",
    "ipfs:cleanup": "powershell.exe -ExecutionPolicy Bypass -File scripts/ipfs-manager.ps1 cleanup",
    "ipfs:health": "powershell.exe -ExecutionPolicy Bypass -File scripts/ipfs-manager.ps1 health",
    "ipfs:startup": "powershell.exe -ExecutionPolicy Bypass -File scripts/startup-ipfs.ps1",
    "ipfs:startup:force": "powershell.exe -ExecutionPolicy Bypass -File scripts/startup-ipfs.ps1 -Force"
  },
  "devDependencies": {
    "@types/node": "^20",
    "ajv": "^8",
    "ajv-formats": "^3",
    "ts-node": "^10",
    "typescript": "^5",
    "vitest": "^3.2.4"
  },
  "dependencies": {
    "commander": "^14.0.0"
  }
}
